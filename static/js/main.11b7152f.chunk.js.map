{"version":3,"sources":["BackendAPI/api.js","Apps/login.js","Apps/navbar.js","Apps/plan_modal.js","map_update.js","Apps/add_friend_modal.js","app.js","index.js"],"names":["Http","XMLHttpRequest","encodeBasicUserPassword","username","password","btoa","send","reqType","urlEndpoint","headers","reqBody","callback","ind","open","setRequestHeader","response","JSON","stringify","onreadystatechange","e","parse","error","console","log","status","LoginForm","props","isHiden","className","id","onClick","hide","title","Fields","errorMsgExists","errorMsg","ErrorMsg","submit","changeType","other","reduce_margin","htmlFor","type","placeholder","name","required","style","Login","state","formType","this","body","setState","loggedIn","login","logout","document","getElementById","value","email","re_password","handleLogin","handleSignUp","display","otherFormType","handleSubmit","React","Component","ifEqActive","str1","str2","Navbar","NavbarButtons","changeMapDisplay","showFriendDisplay","navbar","push","MapDisplayTypes","MY_PLANS","FRIEND_PLANS","PUBLIC_PLANS","getValue","PlanModal","class","close","for","rows","cols","Math","floor","lat","lng","location_details","time","frequency","description","route","points","public","checked","map_display","map_update","locationArray","locations","plan","undefined","$numberDecimal","location","coords","timeframe","owner","user_info","innerHTML","click","FriendRequestsDisplay","friends","friend_obj","map","friend_requests","width","join","FriendModal","add_friend","remove_friend","LogoutButton","App","logged_in","create_plan","friend_modal","display_type","auth_str","current_plan","handleClick","bind","handlePlanSubmit","updateMap","get_friends","dt","msg","message","window","alert","element","latlng","click_ele","get_friends_with_auth","addEventListener","removeEventListener","plan_obj","user_obj","isLoggedIn","ReactDOM","createRoot","render"],"mappings":"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","file":"static/js/main.11b7152f.chunk.js","sourcesContent":["const Http = new XMLHttpRequest();\nconst url='http://localhost:3000';\n\nfunction encodeBasicUserPassword(username, password){\n    let str = username + \":\" + password;\n    return \"Basic \" + btoa(str);\n}\n\n// reqType is the type of request,\n// urlEndpoint starts with a '/' and the endpoint of the backend\n// api we wish to communicate with.\n// headers is an array of arrays with two elements, each of which will be\n// loaded into the http request\nfunction send(reqType, urlEndpoint, headers, reqBody, callback){\n    Http.open(reqType, url + urlEndpoint);\n\n    Http.setRequestHeader('Content-Type', 'application/json');\n    for(let ind in headers){\n        Http.setRequestHeader(headers[ind][0], headers[ind][1]);\n    }\n\n    if(reqBody !== null && reqBody !== \"\"){\n        Http.send(JSON.stringify(reqBody));\n    }else{\n        Http.send();\n    }\n    \n\n    let response;\n    Http.onreadystatechange = (e) => {\n        try{\n            response = JSON.parse(Http.response);\n        }catch(error){\n            return;\n        }\n        \n        console.log(response);\n        callback(Http.status, response);\n    }\n}\n\nexport {send, encodeBasicUserPassword};","import React from 'react';\nimport './popup.css';\nimport {send, encodeBasicUserPassword} from '../BackendAPI/api';\n\nclass Login extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            hide: false,\n            formType: \"Login\",\n            errorMsg: \"\"\n        }\n    }\n\n    otherFormType(){\n        return this.state.formType === \"Login\" ? \"Sign Up\" : \"Login\";\n    }\n\n    login(username, password){\n        send('GET', '/accounts', [['Authorization', encodeBasicUserPassword(username, password)]], {},\n            (status, body) => {\n                if(status === 401){\n                    this.setState({...this.state, errorMsg: \"Invalid username/password.\"});\n                }else{\n                    this.setState({...this.state, hide: true, errorMsg: \"\"});\n                    this.loggedIn(username, password);\n                }\n        });\n    }\n\n    loggedIn(username, password){\n        this.props.login(username, password);\n    }\n\n    loggedOut(){\n        this.props.logout();\n    }\n\n\n    handleLogin(){\n        const username = document.getElementById('l_username_field').value;\n        const password = document.getElementById('l_password_field').value;\n    \n        this.login(username, password);\n    }\n\n    handleSignUp(){\n        const name = document.getElementById('su_name_field').value;\n        const email = document.getElementById('su_email_field').value;\n        const username = document.getElementById('su_username_field').value;\n        const password = document.getElementById('su_password_field').value;\n        const re_password = document.getElementById('su_re-password_field').value;\n\n        if(password !== re_password){\n            this.setState({...this.state, errorMsg: \"Passwords do not match.\"});\n            return;\n        }\n\n        send('POST', '/accounts', [], {'name': name, 'email': email, 'username': username, 'password': password},\n            (status, body) => {\n                // console.log(status);\n                // console.log(body);\n                this.login(username, password);\n            });\n        \n    }\n\n    handleSubmit(){\n        if(this.state.formType === \"Login\"){\n            this.handleLogin();\n        }else{\n            this.handleSignUp();\n        }\n    }\n\n    render(){\n        return (\n            <LoginForm display={this.state.display} title={this.state.formType} other={this.otherFormType()} submit={() => {this.handleSubmit()}}\n                changeType={() => {this.setState({...this.state, formType: this.otherFormType(), errorMsg: \"\"})}}\n                hide={() => {this.setState({...this.state, hide: !this.state.hide, formType: this.state.formType})}} isHiden={this.state.hide} \n                errorMsg={this.state.errorMsg} />\n        );\n    }\n}\n\nfunction LoginForm(props){\n    if(props.isHiden === true){\n        return (\n            <div className=\"form-popup bottom-right\" id=\"myForm\">\n                <div className=\"form-container\">\n                  <button className=\"show-button\" onClick={() => {props.hide()}}>[Show]</button>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"form-popup bottom-right\" id=\"myForm\">\n            <div className=\"form-container\">\n                <h1 className=\"center\">{props.title}</h1>\n                <button className=\"hide-button\" onClick={() => {props.hide()}}>[Hide]</button>\n\n                <Fields title={props.title} errorMsgExists={props.errorMsg !== \"\"} />\n\n                <ErrorMsg errorMsg={props.errorMsg} />\n                <button className=\"btn\" onClick={() => {props.submit()}}>Submit</button>\n                <button className=\"btn-sign-up\" onClick={() => {props.changeType()}}>{props.other}</button>\n            </div>\n        </div>\n    );\n}\n\nfunction ErrorMsg(props){\n    if(props.errorMsg === \"\"){\n        return (<></>);\n    }else{\n        return (\n            <p className=\"error-msg\">{props.errorMsg}</p>\n        );\n    }\n}\n\nfunction Fields(props){\n    const reduce_margin = props.errorMsgExists ? {\"margin-bottom\":\"10px\"} : {};\n\n    if(props.title === \"Login\"){\n        return (\n            <>\n            <label htmlFor=\"username\"><b>Username</b></label>\n            <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" id=\"l_username_field\" required />\n\n            <label htmlFor=\"password\"><b>Password</b></label>\n            <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" id=\"l_password_field\" style={reduce_margin} required />\n            </>\n        );\n    }else{\n        return (\n            <>\n            <label htmlFor=\"name\"><b>Name</b></label>\n            <input type=\"text\" placeholder=\"Enter Name\" name=\"name\" id=\"su_name_field\" required />\n\n            <label htmlFor=\"email\"><b>Email</b></label>\n            <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" id=\"su_email_field\" required />\n\n            <label htmlFor=\"username\"><b>Username</b></label>\n            <input type=\"text\" placeholder=\"Enter Username\" name=\"username\" id=\"su_username_field\" required />\n\n            <label htmlFor=\"password\"><b>Password</b></label>\n            <input type=\"password\" placeholder=\"Enter Password\" name=\"password\" id=\"su_password_field\" style={{\"margin-bottom\":\"10px\"}} required />\n            <input type=\"password\" placeholder=\"Re-enter Password\" name=\"re-password\" id=\"su_re-password_field\" style={reduce_margin} required />\n            </>\n        );\n    }\n}\n\n\nexport default Login;","import './navbar.css';\nimport React from 'react';\nimport {MapDisplayTypes} from '../app';\n\nfunction ifEqActive(str1, str2){\n    if(str1 === str2) return \"active\";\n    return \"\";\n}\n\nclass Navbar extends React.Component {\n    render(){\n        // console.log(this.props);\n\n        return (\n            <ul className=\"nav-ul\">\n                <NavbarButtons changeMapDisplay={this.props.changeMapDisplay} \n                    display={this.props.display} showFriendDisplay={this.props.showFriendDisplay} />\n            </ul>\n        )    \n    }\n}\n\nfunction NavbarButtons(props){\n    const navbar = [];\n    const display = props.display;\n    // console.log(props);\n\n    navbar.push(<li key=\"0\" className=\"nav-li left\"><button className={ifEqActive(display, MapDisplayTypes.MY_PLANS)}\n        onClick={() => props.changeMapDisplay(MapDisplayTypes.MY_PLANS)}>My Plans</button></li>);\n    navbar.push(<li key=\"1\" className=\"nav-li left\"><button className={ifEqActive(display, MapDisplayTypes.FRIEND_PLANS)}\n        onClick={() => props.changeMapDisplay(MapDisplayTypes.FRIEND_PLANS)}>Friend Plans</button></li>);\n    // navbar.push(<li key=\"2\" className=\"nav-li left\"><button className={ifEqActive(display, MapDisplayTypes.GROUP_PLANS)}\n    //     onClick={() => props.changeMapDisplay(MapDisplayTypes.GROUP_PLANS)}>Group Plans</button></li>);\n    navbar.push(<li key=\"3\" className=\"nav-li left\"><button className={ifEqActive(display, MapDisplayTypes.PUBLIC_PLANS)} \n        onClick={() => props.changeMapDisplay(MapDisplayTypes.PUBLIC_PLANS)}>Public Plans</button></li>);\n    \n    // navbar.push(<li key=\"4\" className=\"nav-li right\"><button>Account</button></li>); // NOT IMPLEMENTED\n    navbar.push(<li key=\"5\" className=\"nav-li right\"><button onClick={() => {props.showFriendDisplay()}}>Add Friend</button></li>);\n    \n\n    return navbar;\n}\n\n\nexport {Navbar};","import './popup.css';\nimport React from 'react';\n\nfunction getChecked(id){\n    const element = document.getElementById(id);\n    return element.checked;\n}\n\nfunction getValue(id){\n    const element = document.getElementById(id);\n    return element.value;\n}\n\nfunction PlanModal(props){\n    return (\n        <div className=\"form-popup middle\" id=\"planForm\">\n            <div className=\"form-container\">\n            <h1 class=\"center\">New Plan</h1>\n                <button className=\"hide-button\" onClick={() => {props.close()}}>&times;</button>\n\n                <label for=\"title\"><b>Title</b></label>\n                <input type=\"text\" placeholder=\"Enter Title\" name=\"title\" id=\"plan_title_field\" required />\n\n                <label for=\"location_details\"><b>Location Details (optional)</b></label>\n                <input type=\"text\" placeholder=\"Enter Location Details\" name=\"loc_details\" id=\"plan_location_details_field\" required />\n\n                <label for=\"time\"><b>Time</b></label><br />\n                <input type=\"datetime-local\" placeholder=\"When will this happen?\" name=\"when\" id=\"plan_time_field\" required /><br /><br />\n\n                <label for=\"frequency\"><b>Frequency</b></label>\n                <input type=\"text\" placeholder=\"How often will this happen?\" name=\"frequency\" id=\"plan_frequency_field\" required />\n\n                <label for=\"description\"><b>Description</b></label><br />\n                <textarea id=\"plan_description_field\" rows=\"4\" cols=\"30\">\n                </textarea><br /><br />\n\n                <label for=\"description\"><b>Location: ({Math.floor(props.lat*10000)/10000}, {Math.floor(props.lng*10000)/10000})</b></label><br /><br />\n\n                <input type=\"checkbox\" id=\"plan_public_field\" name=\"public\" value=\"public\" />\n                <label for=\"public\"> Public (ie. shown on home screen)</label><br /><br />\n\n                <button className=\"btn\" onClick={() => {\n                    props.submit({\n                        title: getValue('plan_title_field'), \n                        location_details: getValue('plan_location_details_field'),\n                        time: getValue('plan_time_field'),\n                        frequency: getValue('plan_frequency_field'),\n                        description: getValue('plan_description_field'),\n                        route: {points:[\n                            {lat: props.lat, lng: props.lng}\n                        ]},\n                        public: getChecked('plan_public_field')});\n                }}>Submit</button>\n            </div>\n        </div>\n    );\n}\n\nexport default PlanModal;","const map_display = document.getElementById('map-display');\n\nfunction map_update(locationArray){\n    let locations = [];\n\n    for(let plan in locationArray){\n        if(+locationArray[plan].route.points[0].lat.$numberDecimal === undefined || +locationArray[plan].route.points[0].lng.$numberDecimal === undefined){\n            continue;\n        }\n\n        let location = {};\n        location.title = locationArray[plan].title;\n        location.coords = {};\n        location.location_details = locationArray[plan].location_details;\n        location.timeframe = locationArray[plan].time + ' ' + locationArray[plan].frequency;\n        location.coords.lat = +locationArray[plan].route.points[0].lat.$numberDecimal;\n        location.coords.lng = +locationArray[plan].route.points[0].lng.$numberDecimal;\n        if(locationArray[plan].description !== undefined) location.description = locationArray[plan].description;\n        if(locationArray[plan].owner !== undefined) location.user_info = '[' + locationArray[plan].owner + '] ';\n\n        locations.push(location);\n    }\n\n    map_display.innerHTML = JSON.stringify(locations);\n    map_display.click();\n}\n\nexport {map_update};","import './popup.css';\nimport React from 'react';\n\nfunction getValue(id){\n    const element = document.getElementById(id);\n    return element.value;\n}\n\nfunction FriendModal(props){\n    // console.log(props);\n\n    return (\n        <div className=\"form-popup middle\" id=\"planForm\">\n            <div className=\"form-container\">\n            <h1 class=\"center\">Add/Remove Friends</h1>\n                <button className=\"hide-button\" onClick={() => {props.close()}}>&times;</button>\n\n                <label for=\"friend_requests\"><b>Pending Friend Requests:</b></label>\n                <FriendRequestsDisplay friend_obj={props.friend_obj} />\n\n                <label for=\"title\"><b>Username</b></label>\n                <input type=\"text\" placeholder=\"Enter Username\" name=\"title\" id=\"friend_username\" required />\n\n                <button className=\"btn\" onClick={() => {\n                    props.add_friend({\n                        username: getValue('friend_username')\n                        });\n                }}>Add Friend</button>\n                <button className=\"btn\" onClick={() => {\n                    props.remove_friend({\n                        username: getValue('friend_username')\n                        });\n                }}>Remove Friend</button>\n            </div>\n        </div>\n    );\n}\n\nfunction FriendRequestsDisplay(props){\n    let friends = props.friend_obj.friends.map((username) => '\"' + username + '\"');\n    let friend_requests = props.friend_obj.friend_requests.map((username) => '\"' + username + '\"');\n\n    return (\n        <div>\n            <div style={{width: \"50%\"}}>\n                <p>Friends: {friends.join()}</p>\n            </div>\n            <div style={{width: \"50%\"}}>\n                <p>Friend Requests: {friend_requests.join()}</p>\n            </div>\n\n        </div>);\n}\n\nexport default FriendModal;","import React from 'react';\nimport Login from './Apps/login';\nimport {Navbar} from './Apps/navbar';\nimport PlanModal from './Apps/plan_modal';\nimport 'bootstrap';\nimport {send, encodeBasicUserPassword} from './BackendAPI/api';\nimport {map_update} from './map_update';\nimport FriendModal from './Apps/add_friend_modal';\n\n\nexport const MapDisplayTypes = {\n    MY_PLANS: \"MY_PLANS\",\n    FRIEND_PLANS: \"FRIEND_PLANS\",\n    // GROUP_PLANS: \"GROUP_PLANS\",\n    PUBLIC_PLANS: \"PUBLIC_PLANS\"\n};\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            logged_in: false,\n            create_plan: false,\n            friend_modal: false,\n            friend_obj: {friends: [], friend_requests: []},\n            display_type: MapDisplayTypes.PUBLIC_PLANS, // default\n            user_info: {username: null, password: null, auth_str: null},\n            current_plan: {lat: 0, lng: 0}\n        };\n        this.handleClick = this.handleClick.bind(this);\n        this.login = this.login.bind(this);\n        this.handlePlanSubmit = this.handlePlanSubmit.bind(this);\n        this.updateMap = this.updateMap.bind(this);\n        this.changeMapDisplay = this.changeMapDisplay.bind(this);\n        this.get_friends = this.get_friends.bind(this);\n\n        this.updateMap(this.state.display_type);\n    }\n\n    changeMapDisplay(display_type){\n        if(MapDisplayTypes[display_type] === undefined){\n            // console.log(\"ERROR\");\n            return;\n        }\n\n        this.setState({...this.state, 'display_type': display_type});\n        this.updateMap(display_type);\n    }\n\n    updateMap(dt){\n        if(dt === MapDisplayTypes.MY_PLANS){\n            if(!this.state.logged_in) return;\n            const username = this.state.user_info.username;\n            const auth_str = this.state.user_info.auth_str;\n\n            send('GET', '/' + username + '/plans/1', [['Authorization', auth_str]], {}, (status, body) => {\n                if(status !== 200){\n                    let msg = body.message;\n                    window.alert(\"[\" + status + \" ERROR] \" + msg);\n                    return;\n                }\n\n                map_update(body);\n            });\n        }else if(dt === MapDisplayTypes.FRIEND_PLANS){\n            if(!this.state.logged_in) return;\n            const username = this.state.user_info.username;\n            const auth_str = this.state.user_info.auth_str;\n\n            send('GET', '/' + username + '/friend-plans', [['Authorization', auth_str]], {}, (status, body) => {\n                if(status !== 200){\n                    let msg = body;\n                    if(msg.message !== undefined) msg = msg.message;\n                    window.alert(\"[\" + status + \" ERROR] \" + msg);\n                    return;\n                }\n\n                map_update(body);\n            });\n        // }else if(dt === MapDisplayTypes.GROUP_PLANS){ NOT IMPLEMENTED\n        }else if(dt === MapDisplayTypes.PUBLIC_PLANS){\n            send('GET', '/plans', [], {}, (status, body) => {\n                if(status !== 200){\n                    let msg = body;\n                    if(msg.message !== undefined) msg = msg.message;\n                    window.alert(\"[\" + status + \" ERROR] \" + msg);\n                    return;\n                }\n\n                map_update(body);\n            });\n        }\n    }\n\n    handleClick(element){\n        const latlng = JSON.parse(document.getElementById('map-click').innerHTML);\n        // console.log(latlng);\n        this.setState({...this.state, create_plan: true,\n            current_plan: {lat: latlng.lat, lng: latlng.lng}});\n    }\n\n    login(username, password){\n        const click_ele = document.getElementById('map-click');\n        this.setState({...this.state, logged_in: true, \n            user_info: {'username': username, 'password': password, 'auth_str': encodeBasicUserPassword(username, password)}});\n        this.get_friends_with_auth(username, encodeBasicUserPassword(username, password));\n\n        click_ele.addEventListener('click', this.handleClick);\n    }\n\n    logout(){\n        const click_ele = document.getElementById('map-click');\n        this.setState({...this.state, logged_in: false, display_type: MapDisplayTypes.PUBLIC_PLANS});\n        this.updateMap(MapDisplayTypes.PUBLIC_PLANS);\n\n        click_ele.removeEventListener('click', this.handleClick);\n    }\n\n    handlePlanSubmit(plan_obj){\n        // console.log(plan_obj);\n        const username = this.state.user_info.username;\n        const auth_str = this.state.user_info.auth_str;\n        send('POST', '/' + username + '/plans', [[\"Authorization\", auth_str]], plan_obj, (status, body) => {\n            if(status !== 200){\n                var msg = body.message;\n                window.alert(\"[\" + status + \" ERROR] \" + msg);\n            }else{\n                this.setState({...this.state, create_plan: false});\n            }\n        });\n    }\n\n    add_friend(user_obj){\n        const username = this.state.user_info.username;\n        const auth_str = this.state.user_info.auth_str;\n        send('POST', '/' + username + '/friend', [[\"Authorization\", auth_str]], user_obj, (status, body) => {\n            if(status !== 200){\n                var msg = body.message;\n                window.alert(\"Error! \" + msg);\n            }else{\n                this.setState({...this.state, friend_modal: false});\n            }\n            this.get_friends();\n        });\n    }\n\n    remove_friend(user_obj){\n        const username = this.state.user_info.username;\n        const auth_str = this.state.user_info.auth_str;\n        send('DELETE', '/' + username + '/friend', [[\"Authorization\", auth_str]], user_obj, (status, body) => {\n            if(status !== 200){\n                var msg = body.message;\n                window.alert(\"Error! \" + msg);\n                // console.log(body);\n            }else{\n                this.setState({...this.state, friend_modal: false});\n            }\n            this.get_friends();\n        });\n    }\n\n    get_friends_with_auth(username, auth_str){\n        send('GET', '/' + username + '/friend', [[\"Authorization\", auth_str]], {}, (status, body) => {\n            if(status !== 200){\n                var msg = body.message;\n                window.alert(\"[\" + status + \" ERROR] \" + msg);\n                this.setState({...this.state, friend_obj: {friends: [], friend_requests: []}});\n            }else{\n                this.setState({...this.state, friend_obj: body}); \n            }\n        });\n    }\n\n    get_friends(){\n        const username = this.state.user_info.username;\n        const auth_str = this.state.user_info.auth_str;\n        send('GET', '/' + username + '/friend', [[\"Authorization\", auth_str]], {}, (status, body) => {\n            if(status !== 200){\n                var msg = body.message;\n                window.alert(\"[\" + status + \" ERROR] \" + msg);\n                this.setState({...this.state, friend_obj: {friends: [], friend_requests: []}});\n            }else{\n                this.setState({...this.state, friend_obj: body}); \n            }\n        });\n    }\n\n    render(){\n        let navbar = <Navbar changeMapDisplay={this.changeMapDisplay}\n            display={this.state.display_type} showFriendDisplay={() => {this.setState({...this.state, friend_modal: true})}}/>;\n        let logout = <LogoutButton logout={() => {this.logout()}} />;\n\n        if(this.state.logged_in === true && this.state.friend_modal === true) {\n            return (\n                <>\n                    {navbar}\n                    <FriendModal add_friend={(user_obj) => this.add_friend(user_obj)} remove_friend={(user_obj) => this.remove_friend(user_obj)}\n                        friend_obj={this.state.friend_obj} close={() => {this.setState({...this.state, friend_modal: false})}}/>\n                    {logout}\n                </>\n            );\n        }\n\n\n        if(this.state.logged_in === true && this.state.create_plan === true){\n            return (\n                <>\n                    {navbar}\n                    <PlanModal close={() => {this.setState({...this.state, create_plan: false})}} \n                        lat={this.state.current_plan.lat} lng={this.state.current_plan.lng}\n                        submit={this.handlePlanSubmit} />\n                    {logout}\n                </>\n            );\n        }\n\n        if(this.state.logged_in === true){\n            return (\n                <>\n                    {navbar}\n                    {logout}\n                </>\n            );\n        }\n\n        return (\n            <>\n                <Login isLoggedIn={this.state.logged_in} \n                    login={this.login} />\n            </>\n        );\n    }\n}\n\nfunction LogoutButton(props){\n    return (\n        <div className=\"form-popup bottom-right\" id=\"myForm\">\n            <div className=\"form-container\">\n                <button className=\"logout-button\" onClick={() => {props.logout()}}>[Logout]</button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './app';\n\n// eslint-disable-next-line\nconst SERVER = \"http://localhost:3000\";\n\nconst root = ReactDOM.createRoot(document.getElementById('navbar'));\nroot.render(\n  <App />\n);"],"sourceRoot":""}